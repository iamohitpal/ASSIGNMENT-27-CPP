#include<iostream>
#include<stdio.h>
using namespace std;
class fraction
{
    private:
        long num, deno;
    public:
        fraction(long int n=0, long int d=0)
        {
                num=n;
                deno=d;
        }
        friend void operator>>(istream &in, fraction &f)
        {
                cout<<"\nNumerator    :   ";
                in>>f.num;
                cout<<"\nDenominator  :   ";
                in>>f.deno;
        }
        friend void operator<<(ostream &out, fraction &f)
        {
                out<<f.num<<"/"<<f.deno;
        }
        fraction operator++()//for preincrement
        {
                ++num;
                ++deno;
                return (*this);
        }
        fraction operator++(int s)//for postincrement
        {
                fraction temp=*this;
                this->num++;
                this->deno++;
                return temp;
        }
};
int main()
{
        fraction f1,f2;
        cout<<"f1    :  ";
        cout<<f1;
        cout<<"\nf2    :  ";
        cout<<f2;
        cout<<"\n\nEnter 1st Fraction Value \n";
        cin>>f1;
        cout<<"\nf1++  :  ";
        f1++;
        cout<<f1;
        cout<<"\n++f1  :  ";
        ++f1;
        cout<<f1;
        cout<<"\n\nEnter 2nd Fraction Value \n";
        cin>>f2;
        f2=++f1;
        cout<<"\nf2 = ++f1";
        cout<<"\nf1    :   ";
        cout<<f1;
        cout<<"\nf2    :   ";
        cout<<f2;
        f2=f1++;
        cout<<"\n\nf2 = f1++";
        cout<<"\nf1    :  ";
        cout<<f1;
        cout<<"\nf2    :  ";
        cout<<f2;
        cout<<"\n\n";
return 0;
}
